From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mingtao Zhou <zhoumingtao@loongson.cn>
Date: Fri, 10 Jun 2022 01:47:52 +0000
Subject: support loongarch64 build

using llvm 11 from https://github.com/loongson/llvm-project
using sysroot form https://github.com/loongson/build-tools
remove unsupport build arguments

diff --git a/base/compiler_specific.h b/base/compiler_specific.h
index 1ee80743e2f48d16f9326d98a3813c7756d35ff6..1a46941add241162a9b2a9773cd359a5cea91288 100644
--- a/base/compiler_specific.h
+++ b/base/compiler_specific.h
@@ -328,7 +328,7 @@ inline constexpr bool AnalyzerAssumeTrue(bool arg) {
 #endif  // defined(__clang_analyzer__)
 
 // Use nomerge attribute to disable optimization of merging multiple same calls.
-#if defined(__clang__) && __has_attribute(nomerge)
+#if defined(__clang__) && __has_attribute(nomerge) && __clang_major__ > 11
 #define NOMERGE [[clang::nomerge]]
 #else
 #define NOMERGE
diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index f8417d6d923edb4d62d3366a0d41d8e9d87d704e..f6f9f3a504e6b0f4f0d866aef1bfb36dbd5563c6 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -1256,7 +1256,6 @@ config("compiler_deterministic") {
     } else {
       # -ffile-compilation-dir is an alias for both -fdebug-compilation-dir=
       # and -fcoverage-compilation-dir=.
-      cflags += [ "-ffile-compilation-dir=." ]
     }
     if (!is_win) {
       # We don't use clang -cc1as on Windows (yet? https://crbug.com/762167)
@@ -1548,8 +1547,6 @@ config("default_warnings") {
                         default_toolchain == "//build/toolchain/cros:target")) {
         # TODO(https://crbug.com/1316298): Re-enable once test failure is figured out
         cflags += [
-          "-Xclang",
-          "-no-opaque-pointers",
         ]
       }
 
diff --git a/build/config/linux/pkg-config.py b/build/config/linux/pkg-config.py
index 5adf70cc3bb37be491a614841186b37c1f81a90b..9074496af452df38dce3d1155ca94ee323ef8858 100755
--- a/build/config/linux/pkg-config.py
+++ b/build/config/linux/pkg-config.py
@@ -59,7 +59,10 @@ def SetConfigPath(options):
     print("You must specify an architecture via -a if using a sysroot.")
     sys.exit(1)
 
-  libdir = sysroot + '/usr/' + options.system_libdir + '/pkgconfig'
+  if arch == 'loong64':
+    libdir = sysroot + '/usr/' + 'lib64' + '/pkgconfig'
+  else:
+    libdir = sysroot + '/usr/' + options.system_libdir + '/pkgconfig'
   libdir += ':' + sysroot + '/usr/share/pkgconfig'
   os.environ['PKG_CONFIG_LIBDIR'] = libdir
   return libdir
diff --git a/chrome/installer/linux/BUILD.gn b/chrome/installer/linux/BUILD.gn
index eae0b435629ffa977140e3c3b5c8f42c566a2301..d538da50c1e3398574a8bb05e5ac941e2e444435 100644
--- a/chrome/installer/linux/BUILD.gn
+++ b/chrome/installer/linux/BUILD.gn
@@ -93,7 +93,6 @@ packaging_files_binaries = packaging_files_executables + packaging_files_shlibs
 # TODO(mmoss) Any convenient way to get all the relevant build files?
 # (e.g. all locales, resources, etc.)
 packaging_files = packaging_files_binaries + [
-                    "$root_out_dir/vk_swiftshader_icd.json",
                     "$root_out_dir/xdg-mime",
                     "$root_out_dir/xdg-settings",
                     "$root_out_dir/locales/en-US.pak",
diff --git a/third_party/blink/renderer/platform/wtf/BUILD.gn b/third_party/blink/renderer/platform/wtf/BUILD.gn
index 4a08e77e4283fa629edeeaa90c7a018cdafe6611..551e95f0079d7441ea0a72377bf09e00005e60b9 100644
--- a/third_party/blink/renderer/platform/wtf/BUILD.gn
+++ b/third_party/blink/renderer/platform/wtf/BUILD.gn
@@ -86,6 +86,7 @@ component("wtf") {
     "linked_hash_set.h",
     "lru_cache.h",
     "math_extras.h",
+    "math_extras.cc",
     "pod_arena.h",
     "pod_free_list_arena.h",
     "pod_interval.h",
diff --git a/third_party/blink/renderer/platform/wtf/math_extras.cc b/third_party/blink/renderer/platform/wtf/math_extras.cc
new file mode 100644
index 0000000000000000000000000000000000000000..3a62c5a929638d5f3e7123d56f7bfa3e93513bf1
--- /dev/null
+++ b/third_party/blink/renderer/platform/wtf/math_extras.cc
@@ -0,0 +1,9 @@
+#include"third_party/blink/renderer/platform/wtf/math_extras.h"
+
+double RoundHalfTowardsPositiveInfinity(double value) {
+  return std::floor(value + 0.5);
+}
+
+float RoundHalfTowardsPositiveInfinity(float value) {
+  return std::floor(value + 0.5f);
+}
diff --git a/third_party/blink/renderer/platform/wtf/math_extras.h b/third_party/blink/renderer/platform/wtf/math_extras.h
index b0fc514daa17990d02f7a9bd69be4f6188a47108..9dbeb939ba8b1c710b0433b86b055f747c0f88b4 100644
--- a/third_party/blink/renderer/platform/wtf/math_extras.h
+++ b/third_party/blink/renderer/platform/wtf/math_extras.h
@@ -127,13 +127,11 @@ constexpr float Grad2turn(float g) {
   return g * (1.0f / 400.0f);
 }
 
-constexpr double RoundHalfTowardsPositiveInfinity(double value) {
-  return std::floor(value + 0.5);
-}
+// The constexpr implementation of std::floor requires calng/llvm >=14,
+// wait for the loongarch version of clang/llvm 14 to be released
+double RoundHalfTowardsPositiveInfinity(double value);
 
-constexpr float RoundHalfTowardsPositiveInfinity(float value) {
-  return std::floor(value + 0.5f);
-}
+float RoundHalfTowardsPositiveInfinity(float value);
 
 // ClampTo() is implemented by templated helper classes (to allow for partial
 // template specialization) as well as several helper functions.
diff --git a/third_party/closure_compiler/compiler.py b/third_party/closure_compiler/compiler.py
index f09b7dd7a0ced08e7722bc324f331c4f53bede33..de90fc45c40b93b6ac86a7ebbb634ad33543f777 100755
--- a/third_party/closure_compiler/compiler.py
+++ b/third_party/closure_compiler/compiler.py
@@ -13,8 +13,9 @@ import subprocess
 
 
 _CURRENT_DIR = os.path.join(os.path.dirname(__file__))
-_JAVA_PATH = os.path.join(_CURRENT_DIR, "..", "jdk", "current", "bin", "java")
-assert os.path.isfile(_JAVA_PATH), "java only allowed in android builds"
+_JAVA_BIN = "java"
+_JDK_PATH = os.path.join(_CURRENT_DIR, "..", "jdk", "current", "bin", _JAVA_BIN)
+_JAVA_PATH = _JDK_PATH if os.path.isfile(_JDK_PATH) else _JAVA_BIN
 
 class Compiler(object):
   """Runs the Closure compiler on given source files to typecheck them
diff --git a/third_party/tflite/BUILD.gn b/third_party/tflite/BUILD.gn
index 4cf12de770768ebae1a9e5da03da9a1f70481987..fc9bbe12b5a0e7b2b5258200759bc67233aa9dfd 100644
--- a/third_party/tflite/BUILD.gn
+++ b/third_party/tflite/BUILD.gn
@@ -24,7 +24,6 @@ config("tflite_flags") {
     "-Wno-c99-extensions",
     "-Wno-comment",
     "-Wno-extern-c-compat",
-    "-Wno-gnu-inline-cpp-without-extern",
     "-Wno-loop-analysis",
     "-Wno-shadow",
 
